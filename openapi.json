{
    "openapi": "3.1.0",
    "info": {
      "title": "NaviGator Toolkit",
      "description": "University of Florida NaviGator Toolkit",
      "version": "1.60.4"
    },
    "paths": {
      "/engines/{model}/chat/completions": {
        "post": {
          "tags": [
            "chat/completions"
          ],
          "summary": "Chat Completion",
          "description": "Follows the exact same API spec as `OpenAI's Chat API https://platform.openai.com/docs/api-reference/chat`\n\n```bash\ncurl -X POST http://localhost:4000/v1/chat/completions \n-H \"Content-Type: application/json\" \n-H \"Authorization: Bearer sk-1234\" \n-d '{\n    \"model\": \"gpt-4o\",\n    \"messages\": [\n        {\n            \"role\": \"user\",\n            \"content\": \"Hello!\"\n        }\n    ]\n}'\n```",
          "operationId": "chat_completion_engines__model__chat_completions_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "model",
              "in": "path",
              "required": true,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Model"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/openai/deployments/{model}/chat/completions": {
        "post": {
          "tags": [
            "chat/completions"
          ],
          "summary": "Chat Completion",
          "description": "Follows the exact same API spec as `OpenAI's Chat API https://platform.openai.com/docs/api-reference/chat`\n\n```bash\ncurl -X POST http://localhost:4000/v1/chat/completions \n-H \"Content-Type: application/json\" \n-H \"Authorization: Bearer sk-1234\" \n-d '{\n    \"model\": \"gpt-4o\",\n    \"messages\": [\n        {\n            \"role\": \"user\",\n            \"content\": \"Hello!\"\n        }\n    ]\n}'\n```",
          "operationId": "chat_completion_openai_deployments__model__chat_completions_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "model",
              "in": "path",
              "required": true,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Model"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "401": {
              "description": "AuthenticationError",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "404": {
              "description": "NotFoundError",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "400": {
              "description": "ContentPolicyViolationError",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "422": {
              "description": "UnprocessableEntityError",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "408": {
              "description": "Timeout",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "PermissionDeniedError",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "429": {
              "description": "RateLimitError",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "500": {
              "description": "JSONSchemaValidationError",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "503": {
              "description": "APIConnectionError",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/chat/completions": {
        "post": {
          "tags": [
            "chat/completions"
          ],
          "summary": "Chat Completion",
          "description": "Follows the exact same API spec as `OpenAI's Chat API https://platform.openai.com/docs/api-reference/chat`\n\n```bash\ncurl -X POST http://localhost:4000/v1/chat/completions \n-H \"Content-Type: application/json\" \n-H \"Authorization: Bearer sk-1234\" \n-d '{\n    \"model\": \"gpt-4o\",\n    \"messages\": [\n        {\n            \"role\": \"user\",\n            \"content\": \"Hello!\"\n        }\n    ]\n}'\n```",
          "operationId": "chat_completion_chat_completions_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "model",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Model"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/chat/completions": {
        "post": {
          "tags": [
            "chat/completions"
          ],
          "summary": "Chat Completion",
          "description": "Follows the exact same API spec as `OpenAI's Chat API https://platform.openai.com/docs/api-reference/chat`\n\n```bash\ncurl -X POST http://localhost:4000/v1/chat/completions \n-H \"Content-Type: application/json\" \n-H \"Authorization: Bearer sk-1234\" \n-d '{\n    \"model\": \"gpt-4o\",\n    \"messages\": [\n        {\n            \"role\": \"user\",\n            \"content\": \"Hello!\"\n        }\n    ]\n}'\n```",
          "operationId": "chat_completion_v1_chat_completions_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "model",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Model"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/engines/{model}/completions": {
        "post": {
          "tags": [
            "completions"
          ],
          "summary": "Completion",
          "description": "Follows the exact same API spec as `OpenAI's Completions API https://platform.openai.com/docs/api-reference/completions`\n\n```bash\ncurl -X POST http://localhost:4000/v1/completions \n-H \"Content-Type: application/json\" \n-H \"Authorization: Bearer sk-1234\" \n-d '{\n    \"model\": \"gpt-3.5-turbo-instruct\",\n    \"prompt\": \"Once upon a time\",\n    \"max_tokens\": 50,\n    \"temperature\": 0.7\n}'\n```",
          "operationId": "completion_engines__model__completions_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "model",
              "in": "path",
              "required": true,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Model"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/openai/deployments/{model}/completions": {
        "post": {
          "tags": [
            "completions"
          ],
          "summary": "Completion",
          "description": "Follows the exact same API spec as `OpenAI's Completions API https://platform.openai.com/docs/api-reference/completions`\n\n```bash\ncurl -X POST http://localhost:4000/v1/completions \n-H \"Content-Type: application/json\" \n-H \"Authorization: Bearer sk-1234\" \n-d '{\n    \"model\": \"gpt-3.5-turbo-instruct\",\n    \"prompt\": \"Once upon a time\",\n    \"max_tokens\": 50,\n    \"temperature\": 0.7\n}'\n```",
          "operationId": "completion_openai_deployments__model__completions_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "model",
              "in": "path",
              "required": true,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Model"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/completions": {
        "post": {
          "tags": [
            "completions"
          ],
          "summary": "Completion",
          "description": "Follows the exact same API spec as `OpenAI's Completions API https://platform.openai.com/docs/api-reference/completions`\n\n```bash\ncurl -X POST http://localhost:4000/v1/completions \n-H \"Content-Type: application/json\" \n-H \"Authorization: Bearer sk-1234\" \n-d '{\n    \"model\": \"gpt-3.5-turbo-instruct\",\n    \"prompt\": \"Once upon a time\",\n    \"max_tokens\": 50,\n    \"temperature\": 0.7\n}'\n```",
          "operationId": "completion_completions_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "model",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Model"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/completions": {
        "post": {
          "tags": [
            "completions"
          ],
          "summary": "Completion",
          "description": "Follows the exact same API spec as `OpenAI's Completions API https://platform.openai.com/docs/api-reference/completions`\n\n```bash\ncurl -X POST http://localhost:4000/v1/completions \n-H \"Content-Type: application/json\" \n-H \"Authorization: Bearer sk-1234\" \n-d '{\n    \"model\": \"gpt-3.5-turbo-instruct\",\n    \"prompt\": \"Once upon a time\",\n    \"max_tokens\": 50,\n    \"temperature\": 0.7\n}'\n```",
          "operationId": "completion_v1_completions_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "model",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Model"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/engines/{model}/embeddings": {
        "post": {
          "tags": [
            "embeddings"
          ],
          "summary": "Embeddings",
          "description": "Follows the exact same API spec as `OpenAI's Embeddings API https://platform.openai.com/docs/api-reference/embeddings`\n\n```bash\ncurl -X POST http://localhost:4000/v1/embeddings \n-H \"Content-Type: application/json\" \n-H \"Authorization: Bearer sk-1234\" \n-d '{\n    \"model\": \"text-embedding-ada-002\",\n    \"input\": \"The quick brown fox jumps over the lazy dog\"\n}'\n```",
          "operationId": "embeddings_engines__model__embeddings_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "model",
              "in": "path",
              "required": true,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Model"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/openai/deployments/{model}/embeddings": {
        "post": {
          "tags": [
            "embeddings"
          ],
          "summary": "Embeddings",
          "description": "Follows the exact same API spec as `OpenAI's Embeddings API https://platform.openai.com/docs/api-reference/embeddings`\n\n```bash\ncurl -X POST http://localhost:4000/v1/embeddings \n-H \"Content-Type: application/json\" \n-H \"Authorization: Bearer sk-1234\" \n-d '{\n    \"model\": \"text-embedding-ada-002\",\n    \"input\": \"The quick brown fox jumps over the lazy dog\"\n}'\n```",
          "operationId": "embeddings_openai_deployments__model__embeddings_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "model",
              "in": "path",
              "required": true,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Model"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/embeddings": {
        "post": {
          "tags": [
            "embeddings"
          ],
          "summary": "Embeddings",
          "description": "Follows the exact same API spec as `OpenAI's Embeddings API https://platform.openai.com/docs/api-reference/embeddings`\n\n```bash\ncurl -X POST http://localhost:4000/v1/embeddings \n-H \"Content-Type: application/json\" \n-H \"Authorization: Bearer sk-1234\" \n-d '{\n    \"model\": \"text-embedding-ada-002\",\n    \"input\": \"The quick brown fox jumps over the lazy dog\"\n}'\n```",
          "operationId": "embeddings_embeddings_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "model",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Model"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/embeddings": {
        "post": {
          "tags": [
            "embeddings"
          ],
          "summary": "Embeddings",
          "description": "Follows the exact same API spec as `OpenAI's Embeddings API https://platform.openai.com/docs/api-reference/embeddings`\n\n```bash\ncurl -X POST http://localhost:4000/v1/embeddings \n-H \"Content-Type: application/json\" \n-H \"Authorization: Bearer sk-1234\" \n-d '{\n    \"model\": \"text-embedding-ada-002\",\n    \"input\": \"The quick brown fox jumps over the lazy dog\"\n}'\n```",
          "operationId": "embeddings_v1_embeddings_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "model",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Model"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/images/generations": {
        "post": {
          "tags": [
            "images"
          ],
          "summary": "Image Generation",
          "operationId": "image_generation_images_generations_post",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/v1/images/generations": {
        "post": {
          "tags": [
            "images"
          ],
          "summary": "Image Generation",
          "operationId": "image_generation_v1_images_generations_post",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/audio/transcriptions": {
        "post": {
          "tags": [
            "audio"
          ],
          "summary": "Audio Transcriptions",
          "description": "Same params as:\n\nhttps://platform.openai.com/docs/api-reference/audio/createTranscription?lang=curl",
          "operationId": "audio_transcriptions_audio_transcriptions_post",
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Body_audio_transcriptions_audio_transcriptions_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/v1/audio/transcriptions": {
        "post": {
          "tags": [
            "audio"
          ],
          "summary": "Audio Transcriptions",
          "description": "Same params as:\n\nhttps://platform.openai.com/docs/api-reference/audio/createTranscription?lang=curl",
          "operationId": "audio_transcriptions_v1_audio_transcriptions_post",
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Body_audio_transcriptions_v1_audio_transcriptions_post"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/audio/speech": {
        "post": {
          "tags": [
            "audio"
          ],
          "summary": "Audio Speech",
          "description": "Same params as:\n\nhttps://platform.openai.com/docs/api-reference/audio/createSpeech",
          "operationId": "audio_speech_audio_speech_post",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/v1/audio/speech": {
        "post": {
          "tags": [
            "audio"
          ],
          "summary": "Audio Speech",
          "description": "Same params as:\n\nhttps://platform.openai.com/docs/api-reference/audio/createSpeech",
          "operationId": "audio_speech_v1_audio_speech_post",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/moderations": {
        "post": {
          "tags": [
            "moderations"
          ],
          "summary": "Moderations",
          "description": "The moderations endpoint is a tool you can use to check whether content complies with an LLM Providers policies.\n\nQuick Start\n```\ncurl --location 'http://0.0.0.0:4000/moderations'     --header 'Content-Type: application/json'     --header 'Authorization: Bearer sk-1234'     --data '{\"input\": \"Sample text goes here\", \"model\": \"text-moderation-stable\"}'\n```",
          "operationId": "moderations_moderations_post",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/v1/moderations": {
        "post": {
          "tags": [
            "moderations"
          ],
          "summary": "Moderations",
          "description": "The moderations endpoint is a tool you can use to check whether content complies with an LLM Providers policies.\n\nQuick Start\n```\ncurl --location 'http://0.0.0.0:4000/moderations'     --header 'Content-Type: application/json'     --header 'Authorization: Bearer sk-1234'     --data '{\"input\": \"Sample text goes here\", \"model\": \"text-moderation-stable\"}'\n```",
          "operationId": "moderations_v1_moderations_post",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/v1/batches": {
        "post": {
          "tags": [
            "batch"
          ],
          "summary": "Create Batch",
          "description": "Create large batches of API requests for asynchronous processing.\nThis is the equivalent of POST https://api.openai.com/v1/batch\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/batch\n\nExample Curl\n```\ncurl http://localhost:4000/v1/batches         -H \"Authorization: Bearer sk-1234\"         -H \"Content-Type: application/json\"         -d '{\n        \"input_file_id\": \"file-abc123\",\n        \"endpoint\": \"/v1/chat/completions\",\n        \"completion_window\": \"24h\"\n}'\n```",
          "operationId": "create_batch_v1_batches_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "batch"
          ],
          "summary": "List Batches",
          "description": "Lists \nThis is the equivalent of GET https://api.openai.com/v1/batches/\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/batch/list\n\nExample Curl\n```\ncurl http://localhost:4000/v1/batches?limit=2     -H \"Authorization: Bearer sk-1234\"     -H \"Content-Type: application/json\" \n```",
          "operationId": "list_batches_v1_batches_get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Limit"
              }
            },
            {
              "name": "after",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "After"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/batches": {
        "post": {
          "tags": [
            "batch"
          ],
          "summary": "Create Batch",
          "description": "Create large batches of API requests for asynchronous processing.\nThis is the equivalent of POST https://api.openai.com/v1/batch\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/batch\n\nExample Curl\n```\ncurl http://localhost:4000/v1/batches         -H \"Authorization: Bearer sk-1234\"         -H \"Content-Type: application/json\"         -d '{\n        \"input_file_id\": \"file-abc123\",\n        \"endpoint\": \"/v1/chat/completions\",\n        \"completion_window\": \"24h\"\n}'\n```",
          "operationId": "create_batch_batches_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "batch"
          ],
          "summary": "List Batches",
          "description": "Lists \nThis is the equivalent of GET https://api.openai.com/v1/batches/\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/batch/list\n\nExample Curl\n```\ncurl http://localhost:4000/v1/batches?limit=2     -H \"Authorization: Bearer sk-1234\"     -H \"Content-Type: application/json\" \n```",
          "operationId": "list_batches_batches_get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Limit"
              }
            },
            {
              "name": "after",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "After"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/batches/{batch_id}": {
        "get": {
          "tags": [
            "batch"
          ],
          "summary": "Retrieve Batch",
          "description": "Retrieves a batch.\nThis is the equivalent of GET https://api.openai.com/v1/batches/{batch_id}\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/batch/retrieve\n\nExample Curl\n```\ncurl http://localhost:4000/v1/batches/batch_abc123     -H \"Authorization: Bearer sk-1234\"     -H \"Content-Type: application/json\" \n```",
          "operationId": "retrieve_batch_v1_batches__batch_id__get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "batch_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Batch ID to retrieve",
                "description": "The ID of the batch to retrieve"
              },
              "description": "The ID of the batch to retrieve"
            },
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/batches/{batch_id}": {
        "get": {
          "tags": [
            "batch"
          ],
          "summary": "Retrieve Batch",
          "description": "Retrieves a batch.\nThis is the equivalent of GET https://api.openai.com/v1/batches/{batch_id}\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/batch/retrieve\n\nExample Curl\n```\ncurl http://localhost:4000/v1/batches/batch_abc123     -H \"Authorization: Bearer sk-1234\"     -H \"Content-Type: application/json\" \n```",
          "operationId": "retrieve_batch_batches__batch_id__get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "batch_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Batch ID to retrieve",
                "description": "The ID of the batch to retrieve"
              },
              "description": "The ID of the batch to retrieve"
            },
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/files": {
        "post": {
          "tags": [
            "files"
          ],
          "summary": "Create File",
          "description": "Upload a file that can be used across - Assistants API, Batch API \nThis is the equivalent of POST https://api.openai.com/v1/files\n\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/files/create\n\nExample Curl\n```\ncurl http://localhost:4000/v1/files         -H \"Authorization: Bearer sk-1234\"         -F purpose=\"batch\"         -F file=\"@mydata.jsonl\"\n\n```",
          "operationId": "create_file_v1_files_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Body_create_file_v1_files_post"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "files"
          ],
          "summary": "List Files",
          "description": "Returns information about a specific file. that can be used across - Assistants API, Batch API \nThis is the equivalent of GET https://api.openai.com/v1/files/\n\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/files/list\n\nExample Curl\n```\ncurl http://localhost:4000/v1/files        -H \"Authorization: Bearer sk-1234\"\n\n```",
          "operationId": "list_files_v1_files_get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            },
            {
              "name": "purpose",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Purpose"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/files": {
        "post": {
          "tags": [
            "files"
          ],
          "summary": "Create File",
          "description": "Upload a file that can be used across - Assistants API, Batch API \nThis is the equivalent of POST https://api.openai.com/v1/files\n\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/files/create\n\nExample Curl\n```\ncurl http://localhost:4000/v1/files         -H \"Authorization: Bearer sk-1234\"         -F purpose=\"batch\"         -F file=\"@mydata.jsonl\"\n\n```",
          "operationId": "create_file_files_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Body_create_file_files_post"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "files"
          ],
          "summary": "List Files",
          "description": "Returns information about a specific file. that can be used across - Assistants API, Batch API \nThis is the equivalent of GET https://api.openai.com/v1/files/\n\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/files/list\n\nExample Curl\n```\ncurl http://localhost:4000/v1/files        -H \"Authorization: Bearer sk-1234\"\n\n```",
          "operationId": "list_files_files_get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            },
            {
              "name": "purpose",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Purpose"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/files/{file_id}": {
        "get": {
          "tags": [
            "files"
          ],
          "summary": "Get File",
          "description": "Returns information about a specific file. that can be used across - Assistants API, Batch API \nThis is the equivalent of GET https://api.openai.com/v1/files/{file_id}\n\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/files/retrieve\n\nExample Curl\n```\ncurl http://localhost:4000/v1/files/file-abc123         -H \"Authorization: Bearer sk-1234\"\n\n```",
          "operationId": "get_file_v1_files__file_id__get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "file_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "File Id"
              }
            },
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "files"
          ],
          "summary": "Delete File",
          "description": "Deletes a specified file. that can be used across - Assistants API, Batch API \nThis is the equivalent of DELETE https://api.openai.com/v1/files/{file_id}\n\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/files/delete\n\nExample Curl\n```\ncurl http://localhost:4000/v1/files/file-abc123     -X DELETE     -H \"Authorization: Bearer $OPENAI_API_KEY\"\n\n```",
          "operationId": "delete_file_v1_files__file_id__delete",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "file_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "File Id"
              }
            },
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/files/{file_id}": {
        "get": {
          "tags": [
            "files"
          ],
          "summary": "Get File",
          "description": "Returns information about a specific file. that can be used across - Assistants API, Batch API \nThis is the equivalent of GET https://api.openai.com/v1/files/{file_id}\n\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/files/retrieve\n\nExample Curl\n```\ncurl http://localhost:4000/v1/files/file-abc123         -H \"Authorization: Bearer sk-1234\"\n\n```",
          "operationId": "get_file_files__file_id__get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "file_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "File Id"
              }
            },
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "files"
          ],
          "summary": "Delete File",
          "description": "Deletes a specified file. that can be used across - Assistants API, Batch API \nThis is the equivalent of DELETE https://api.openai.com/v1/files/{file_id}\n\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/files/delete\n\nExample Curl\n```\ncurl http://localhost:4000/v1/files/file-abc123     -X DELETE     -H \"Authorization: Bearer $OPENAI_API_KEY\"\n\n```",
          "operationId": "delete_file_files__file_id__delete",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "file_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "File Id"
              }
            },
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/files/{file_id}/content": {
        "get": {
          "tags": [
            "files"
          ],
          "summary": "Get File Content",
          "description": "Returns information about a specific file. that can be used across - Assistants API, Batch API \nThis is the equivalent of GET https://api.openai.com/v1/files/{file_id}/content\n\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/files/retrieve-contents\n\nExample Curl\n```\ncurl http://localhost:4000/v1/files/file-abc123/content         -H \"Authorization: Bearer sk-1234\"\n\n```",
          "operationId": "get_file_content_v1_files__file_id__content_get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "file_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "File Id"
              }
            },
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/files/{file_id}/content": {
        "get": {
          "tags": [
            "files"
          ],
          "summary": "Get File Content",
          "description": "Returns information about a specific file. that can be used across - Assistants API, Batch API \nThis is the equivalent of GET https://api.openai.com/v1/files/{file_id}/content\n\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/files/retrieve-contents\n\nExample Curl\n```\ncurl http://localhost:4000/v1/files/file-abc123/content         -H \"Authorization: Bearer sk-1234\"\n\n```",
          "operationId": "get_file_content_files__file_id__content_get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "file_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "File Id"
              }
            },
            {
              "name": "provider",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Provider"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/fine_tuning/jobs": {
        "post": {
          "tags": [
            "fine-tuning"
          ],
          "summary": "✨ (Enterprise) Create Fine-Tuning Job",
          "description": "Creates a fine-tuning job which begins the process of creating a new model from a given dataset.\nThis is the equivalent of POST https://api.openai.com/v1/fine_tuning/jobs\n\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/fine-tuning/create\n\nExample Curl:\n```\ncurl http://localhost:4000/v1/fine_tuning/jobs       -H \"Content-Type: application/json\"       -H \"Authorization: Bearer sk-1234\"       -d '{\n    \"model\": \"gpt-3.5-turbo\",\n    \"training_file\": \"file-abc123\",\n    \"hyperparameters\": {\n      \"n_epochs\": 4\n    }\n  }'\n```",
          "operationId": "create_fine_tuning_job_fine_tuning_jobs_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiteLLMFineTuningJobCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "fine-tuning"
          ],
          "summary": "✨ (Enterprise) List Fine-Tuning Jobs",
          "description": "Lists fine-tuning jobs for the organization.\nThis is the equivalent of GET https://api.openai.com/v1/fine_tuning/jobs\n\nSupported Query Params:\n- `custom_llm_provider`: Name of the LiteLLM provider\n- `after`: Identifier for the last job from the previous pagination request.\n- `limit`: Number of fine-tuning jobs to retrieve (default is 20).",
          "operationId": "list_fine_tuning_jobs_fine_tuning_jobs_get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "custom_llm_provider",
              "in": "query",
              "required": true,
              "schema": {
                "enum": [
                  "openai",
                  "azure"
                ],
                "type": "string",
                "title": "Custom Llm Provider"
              }
            },
            {
              "name": "after",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "After"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Limit"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/fine_tuning/jobs": {
        "post": {
          "tags": [
            "fine-tuning"
          ],
          "summary": "✨ (Enterprise) Create Fine-Tuning Job",
          "description": "Creates a fine-tuning job which begins the process of creating a new model from a given dataset.\nThis is the equivalent of POST https://api.openai.com/v1/fine_tuning/jobs\n\nSupports Identical Params as: https://platform.openai.com/docs/api-reference/fine-tuning/create\n\nExample Curl:\n```\ncurl http://localhost:4000/v1/fine_tuning/jobs       -H \"Content-Type: application/json\"       -H \"Authorization: Bearer sk-1234\"       -d '{\n    \"model\": \"gpt-3.5-turbo\",\n    \"training_file\": \"file-abc123\",\n    \"hyperparameters\": {\n      \"n_epochs\": 4\n    }\n  }'\n```",
          "operationId": "create_fine_tuning_job_v1_fine_tuning_jobs_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LiteLLMFineTuningJobCreate"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "fine-tuning"
          ],
          "summary": "✨ (Enterprise) List Fine-Tuning Jobs",
          "description": "Lists fine-tuning jobs for the organization.\nThis is the equivalent of GET https://api.openai.com/v1/fine_tuning/jobs\n\nSupported Query Params:\n- `custom_llm_provider`: Name of the LiteLLM provider\n- `after`: Identifier for the last job from the previous pagination request.\n- `limit`: Number of fine-tuning jobs to retrieve (default is 20).",
          "operationId": "list_fine_tuning_jobs_v1_fine_tuning_jobs_get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "custom_llm_provider",
              "in": "query",
              "required": true,
              "schema": {
                "enum": [
                  "openai",
                  "azure"
                ],
                "type": "string",
                "title": "Custom Llm Provider"
              }
            },
            {
              "name": "after",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "After"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Limit"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/fine_tuning/jobs/{fine_tuning_job_id}/cancel": {
        "post": {
          "tags": [
            "fine-tuning"
          ],
          "summary": "✨ (Enterprise) Cancel Fine-Tuning Jobs",
          "description": "Cancel a fine-tuning job.\n\nThis is the equivalent of POST https://api.openai.com/v1/fine_tuning/jobs/{fine_tuning_job_id}/cancel\n\nSupported Query Params:\n- `custom_llm_provider`: Name of the LiteLLM provider\n- `fine_tuning_job_id`: The ID of the fine-tuning job to cancel.",
          "operationId": "cancel_fine_tuning_job_fine_tuning_jobs__fine_tuning_job_id__cancel_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "fine_tuning_job_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Fine Tuning Job Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/fine_tuning/jobs/{fine_tuning_job_id}/cancel": {
        "post": {
          "tags": [
            "fine-tuning"
          ],
          "summary": "✨ (Enterprise) Cancel Fine-Tuning Jobs",
          "description": "Cancel a fine-tuning job.\n\nThis is the equivalent of POST https://api.openai.com/v1/fine_tuning/jobs/{fine_tuning_job_id}/cancel\n\nSupported Query Params:\n- `custom_llm_provider`: Name of the LiteLLM provider\n- `fine_tuning_job_id`: The ID of the fine-tuning job to cancel.",
          "operationId": "cancel_fine_tuning_job_v1_fine_tuning_jobs__fine_tuning_job_id__cancel_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "fine_tuning_job_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Fine Tuning Job Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/assistants": {
        "get": {
          "tags": [
            "assistants"
          ],
          "summary": "Get Assistants",
          "description": "Returns a list of assistants.\n\nAPI Reference docs - https://platform.openai.com/docs/api-reference/assistants/listAssistants",
          "operationId": "get_assistants_assistants_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        },
        "post": {
          "tags": [
            "assistants"
          ],
          "summary": "Create Assistant",
          "description": "Create assistant\n\nAPI Reference docs - https://platform.openai.com/docs/api-reference/assistants/createAssistant",
          "operationId": "create_assistant_assistants_post",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/v1/assistants": {
        "get": {
          "tags": [
            "assistants"
          ],
          "summary": "Get Assistants",
          "description": "Returns a list of assistants.\n\nAPI Reference docs - https://platform.openai.com/docs/api-reference/assistants/listAssistants",
          "operationId": "get_assistants_v1_assistants_get",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        },
        "post": {
          "tags": [
            "assistants"
          ],
          "summary": "Create Assistant",
          "description": "Create assistant\n\nAPI Reference docs - https://platform.openai.com/docs/api-reference/assistants/createAssistant",
          "operationId": "create_assistant_v1_assistants_post",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/v1/assistants/{assistant_id}": {
        "delete": {
          "tags": [
            "assistants"
          ],
          "summary": "Delete Assistant",
          "description": "Delete assistant\n\nAPI Reference docs - https://platform.openai.com/docs/api-reference/assistants/createAssistant",
          "operationId": "delete_assistant_v1_assistants__assistant_id__delete",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "assistant_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Assistant Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/assistants/{assistant_id}": {
        "delete": {
          "tags": [
            "assistants"
          ],
          "summary": "Delete Assistant",
          "description": "Delete assistant\n\nAPI Reference docs - https://platform.openai.com/docs/api-reference/assistants/createAssistant",
          "operationId": "delete_assistant_assistants__assistant_id__delete",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "assistant_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Assistant Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/threads": {
        "post": {
          "tags": [
            "assistants"
          ],
          "summary": "Create Threads",
          "description": "Create a thread.\n\nAPI Reference - https://platform.openai.com/docs/api-reference/threads/createThread",
          "operationId": "create_threads_threads_post",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/v1/threads": {
        "post": {
          "tags": [
            "assistants"
          ],
          "summary": "Create Threads",
          "description": "Create a thread.\n\nAPI Reference - https://platform.openai.com/docs/api-reference/threads/createThread",
          "operationId": "create_threads_v1_threads_post",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/threads/{thread_id}": {
        "get": {
          "tags": [
            "assistants"
          ],
          "summary": "Get Thread",
          "description": "Retrieves a thread.\n\nAPI Reference - https://platform.openai.com/docs/api-reference/threads/getThread",
          "operationId": "get_thread_threads__thread_id__get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "thread_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Thread Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/threads/{thread_id}": {
        "get": {
          "tags": [
            "assistants"
          ],
          "summary": "Get Thread",
          "description": "Retrieves a thread.\n\nAPI Reference - https://platform.openai.com/docs/api-reference/threads/getThread",
          "operationId": "get_thread_v1_threads__thread_id__get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "thread_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Thread Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/threads/{thread_id}/messages": {
        "post": {
          "tags": [
            "assistants"
          ],
          "summary": "Add Messages",
          "description": "Create a message.\n\nAPI Reference - https://platform.openai.com/docs/api-reference/messages/createMessage",
          "operationId": "add_messages_threads__thread_id__messages_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "thread_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Thread Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "assistants"
          ],
          "summary": "Get Messages",
          "description": "Returns a list of messages for a given thread.\n\nAPI Reference - https://platform.openai.com/docs/api-reference/messages/listMessages",
          "operationId": "get_messages_threads__thread_id__messages_get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "thread_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Thread Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/threads/{thread_id}/messages": {
        "post": {
          "tags": [
            "assistants"
          ],
          "summary": "Add Messages",
          "description": "Create a message.\n\nAPI Reference - https://platform.openai.com/docs/api-reference/messages/createMessage",
          "operationId": "add_messages_v1_threads__thread_id__messages_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "thread_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Thread Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        },
        "get": {
          "tags": [
            "assistants"
          ],
          "summary": "Get Messages",
          "description": "Returns a list of messages for a given thread.\n\nAPI Reference - https://platform.openai.com/docs/api-reference/messages/listMessages",
          "operationId": "get_messages_v1_threads__thread_id__messages_get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "thread_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Thread Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/threads/{thread_id}/runs": {
        "post": {
          "tags": [
            "assistants"
          ],
          "summary": "Run Thread",
          "description": "Create a run.\n\nAPI Reference: https://platform.openai.com/docs/api-reference/runs/createRun",
          "operationId": "run_thread_threads__thread_id__runs_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "thread_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Thread Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/threads/{thread_id}/runs": {
        "post": {
          "tags": [
            "assistants"
          ],
          "summary": "Run Thread",
          "description": "Create a run.\n\nAPI Reference: https://platform.openai.com/docs/api-reference/runs/createRun",
          "operationId": "run_thread_v1_threads__thread_id__runs_post",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "thread_id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "title": "Thread Id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/models": {
        "get": {
          "tags": [
            "model management"
          ],
          "summary": "Model List",
          "description": "Use `/model/info` - to get detailed model information, example - pricing, mode, etc.\n\nThis is just for compatibility with openai projects like aider.",
          "operationId": "model_list_models_get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "return_wildcard_routes",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": false,
                "title": "Return Wildcard Routes"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/v1/models": {
        "get": {
          "tags": [
            "model management"
          ],
          "summary": "Model List",
          "description": "Use `/model/info` - to get detailed model information, example - pricing, mode, etc.\n\nThis is just for compatibility with openai projects like aider.",
          "operationId": "model_list_v1_models_get",
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ],
          "parameters": [
            {
              "name": "return_wildcard_routes",
              "in": "query",
              "required": false,
              "schema": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": false,
                "title": "Return Wildcard Routes"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          }
        }
      },
      "/utils/token_counter": {
        "post": {
          "tags": [
            "llm utils"
          ],
          "summary": "Token Counter",
          "operationId": "token_counter_utils_token_counter_post",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenCountRequest"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TokenCountResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Validation Error",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/HTTPValidationError"
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/rerank": {
        "post": {
          "tags": [
            "rerank"
          ],
          "summary": "Rerank",
          "operationId": "rerank_rerank_post",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/v1/rerank": {
        "post": {
          "tags": [
            "rerank"
          ],
          "summary": "Rerank",
          "operationId": "rerank_v1_rerank_post",
          "responses": {
            "200": {
              "description": "Successful Response",
              "content": {
                "application/json": {
                  "schema": {
  
                  }
                }
              }
            }
          },
          "security": [
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            },
            {
              "APIKeyHeader": []
            }
          ]
        }
      },
      "/realtime": {
        "get": {
          "summary": "WebSocket: websocket_endpoint",
          "description": "WebSocket connection endpoint",
          "operationId": "websocket_websocket_endpoint",
          "parameters": [
            {
              "name": "model",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "101": {
              "description": "WebSocket Protocol Switched"
            }
          },
          "tags": [
            "WebSocket"
          ]
        }
      },
      "/v1/realtime": {
        "get": {
          "summary": "WebSocket: websocket_endpoint",
          "description": "WebSocket connection endpoint",
          "operationId": "websocket_websocket_endpoint",
          "parameters": [
            {
              "name": "model",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "101": {
              "description": "WebSocket Protocol Switched"
            }
          },
          "tags": [
            "WebSocket"
          ]
        }
      }
    },
    "components": {
      "schemas": {
        "AddTeamCallback": {
          "properties": {
            "callback_name": {
              "type": "string",
              "title": "Callback Name"
            },
            "callback_type": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "success",
                    "failure",
                    "success_and_failure"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Callback Type",
              "default": "success_and_failure"
            },
            "callback_vars": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object",
              "title": "Callback Vars"
            }
          },
          "type": "object",
          "required": [
            "callback_name",
            "callback_vars"
          ],
          "title": "AddTeamCallback"
        },
        "BlockKeyRequest": {
          "properties": {
            "key": {
              "type": "string",
              "title": "Key"
            }
          },
          "type": "object",
          "required": [
            "key"
          ],
          "title": "BlockKeyRequest"
        },
        "BlockTeamRequest": {
          "properties": {
            "team_id": {
              "type": "string",
              "title": "Team Id"
            }
          },
          "type": "object",
          "required": [
            "team_id"
          ],
          "title": "BlockTeamRequest"
        },
        "BlockUsers": {
          "properties": {
            "user_ids": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "User Ids"
            }
          },
          "type": "object",
          "required": [
            "user_ids"
          ],
          "title": "BlockUsers"
        },
        "Body_audio_transcriptions_audio_transcriptions_post": {
          "properties": {
            "file": {
              "type": "string",
              "format": "binary",
              "title": "File"
            }
          },
          "type": "object",
          "required": [
            "file"
          ],
          "title": "Body_audio_transcriptions_audio_transcriptions_post"
        },
        "Body_audio_transcriptions_v1_audio_transcriptions_post": {
          "properties": {
            "file": {
              "type": "string",
              "format": "binary",
              "title": "File"
            }
          },
          "type": "object",
          "required": [
            "file"
          ],
          "title": "Body_audio_transcriptions_v1_audio_transcriptions_post"
        },
        "Body_create_file__provider__v1_files_post": {
          "properties": {
            "purpose": {
              "type": "string",
              "title": "Purpose"
            },
            "custom_llm_provider": {
              "type": "string",
              "title": "Custom Llm Provider",
              "default": "openai"
            },
            "file": {
              "type": "string",
              "format": "binary",
              "title": "File"
            }
          },
          "type": "object",
          "required": [
            "purpose",
            "file"
          ],
          "title": "Body_create_file__provider__v1_files_post"
        },
        "Body_create_file_files_post": {
          "properties": {
            "purpose": {
              "type": "string",
              "title": "Purpose"
            },
            "custom_llm_provider": {
              "type": "string",
              "title": "Custom Llm Provider",
              "default": "openai"
            },
            "file": {
              "type": "string",
              "format": "binary",
              "title": "File"
            }
          },
          "type": "object",
          "required": [
            "purpose",
            "file"
          ],
          "title": "Body_create_file_files_post"
        },
        "Body_create_file_v1_files_post": {
          "properties": {
            "purpose": {
              "type": "string",
              "title": "Purpose"
            },
            "custom_llm_provider": {
              "type": "string",
              "title": "Custom Llm Provider",
              "default": "openai"
            },
            "file": {
              "type": "string",
              "format": "binary",
              "title": "File"
            }
          },
          "type": "object",
          "required": [
            "purpose",
            "file"
          ],
          "title": "Body_create_file_v1_files_post"
        },
        "BudgetConfig": {
          "properties": {
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            }
          },
          "type": "object",
          "title": "BudgetConfig"
        },
        "BudgetDeleteRequest": {
          "properties": {
            "id": {
              "type": "string",
              "title": "Id"
            }
          },
          "type": "object",
          "required": [
            "id"
          ],
          "title": "BudgetDeleteRequest"
        },
        "BudgetNewRequest": {
          "properties": {
            "budget_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Id",
              "description": "The unique budget id."
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget",
              "description": "Requests will fail if this budget (in USD) is exceeded."
            },
            "soft_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Soft Budget",
              "description": "Requests will NOT fail if this is exceeded. Will fire alerting though."
            },
            "max_parallel_requests": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Parallel Requests",
              "description": "Max concurrent requests allowed for this budget id."
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit",
              "description": "Max tokens per minute, allowed for this budget id."
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit",
              "description": "Max requests per minute, allowed for this budget id."
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration",
              "description": "Max duration budget should be set for (e.g. '1hr', '1d', '28d')"
            },
            "model_max_budget": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/BudgetConfig"
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Max Budget",
              "description": "Max budget for each model (e.g. {'gpt-4o': {'max_budget': '0.0000001', 'budget_duration': '1d', 'tpm_limit': 1000, 'rpm_limit': 1000}})"
            }
          },
          "type": "object",
          "title": "BudgetNewRequest"
        },
        "BudgetRequest": {
          "properties": {
            "budgets": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Budgets"
            }
          },
          "type": "object",
          "required": [
            "budgets"
          ],
          "title": "BudgetRequest"
        },
        "ConfigurableClientsideParamsCustomAuth": {
          "properties": {
            "api_base": {
              "type": "string",
              "title": "Api Base"
            }
          },
          "type": "object",
          "required": [
            "api_base"
          ],
          "title": "ConfigurableClientsideParamsCustomAuth"
        },
        "DeleteCustomerRequest": {
          "properties": {
            "user_ids": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "User Ids"
            }
          },
          "type": "object",
          "required": [
            "user_ids"
          ],
          "title": "DeleteCustomerRequest",
          "description": "Delete multiple Customers"
        },
        "DeleteTeamRequest": {
          "properties": {
            "team_ids": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Team Ids"
            }
          },
          "type": "object",
          "required": [
            "team_ids"
          ],
          "title": "DeleteTeamRequest"
        },
        "DeleteUserRequest": {
          "properties": {
            "user_ids": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "User Ids"
            }
          },
          "type": "object",
          "required": [
            "user_ids"
          ],
          "title": "DeleteUserRequest"
        },
        "Deployment": {
          "properties": {
            "model_name": {
              "type": "string",
              "title": "Model Name"
            },
            "litellm_params": {
              "$ref": "#/components/schemas/LiteLLM_Params"
            },
            "model_info": {
              "$ref": "#/components/schemas/ModelInfo"
            }
          },
          "additionalProperties": true,
          "type": "object",
          "required": [
            "model_name",
            "litellm_params",
            "model_info"
          ],
          "title": "Deployment"
        },
        "ErrorResponse": {
          "properties": {
            "detail": {
              "type": "object",
              "title": "Detail",
              "example": {
                "error": {
                  "code": "error_code",
                  "message": "Error message",
                  "param": "error_param",
                  "type": "error_type"
                }
              }
            }
          },
          "type": "object",
          "required": [
            "detail"
          ],
          "title": "ErrorResponse"
        },
        "GenerateKeyRequest": {
          "properties": {
            "key_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key Alias"
            },
            "duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Duration"
            },
            "models": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Models",
              "default": []
            },
            "spend": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Spend",
              "default": 0
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            },
            "team_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Id"
            },
            "max_parallel_requests": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Parallel Requests"
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata",
              "default": {
  
              }
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "allowed_cache_controls": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allowed Cache Controls",
              "default": []
            },
            "config": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Config",
              "default": {
  
              }
            },
            "permissions": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Permissions",
              "default": {
  
              }
            },
            "model_max_budget": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Max Budget",
              "default": {
  
              }
            },
            "model_rpm_limit": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Rpm Limit"
            },
            "model_tpm_limit": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Tpm Limit"
            },
            "guardrails": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Guardrails"
            },
            "blocked": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Blocked"
            },
            "aliases": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aliases",
              "default": {
  
              }
            },
            "key": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key"
            },
            "budget_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Id"
            },
            "tags": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            },
            "enforced_params": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Enforced Params"
            },
            "soft_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Soft Budget"
            },
            "send_invite_email": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Send Invite Email"
            }
          },
          "type": "object",
          "title": "GenerateKeyRequest"
        },
        "GenerateKeyResponse": {
          "properties": {
            "key_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key Alias"
            },
            "duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Duration"
            },
            "models": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Models",
              "default": []
            },
            "spend": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Spend",
              "default": 0
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            },
            "team_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Id"
            },
            "max_parallel_requests": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Parallel Requests"
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata",
              "default": {
  
              }
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "allowed_cache_controls": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allowed Cache Controls",
              "default": []
            },
            "config": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Config",
              "default": {
  
              }
            },
            "permissions": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Permissions",
              "default": {
  
              }
            },
            "model_max_budget": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Max Budget",
              "default": {
  
              }
            },
            "model_rpm_limit": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Rpm Limit"
            },
            "model_tpm_limit": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Tpm Limit"
            },
            "guardrails": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Guardrails"
            },
            "blocked": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Blocked"
            },
            "aliases": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aliases",
              "default": {
  
              }
            },
            "key": {
              "type": "string",
              "title": "Key"
            },
            "budget_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Id"
            },
            "tags": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            },
            "enforced_params": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Enforced Params"
            },
            "key_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key Name"
            },
            "expires": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Expires"
            },
            "token_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token Id"
            },
            "litellm_budget_table": {
              "anyOf": [
                {
  
                },
                {
                  "type": "null"
                }
              ],
              "title": "Litellm Budget Table"
            },
            "token": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token"
            }
          },
          "type": "object",
          "required": [
            "key",
            "expires"
          ],
          "title": "GenerateKeyResponse"
        },
        "GuardrailInfoResponse": {
          "properties": {
            "guardrail_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Guardrail Name"
            },
            "guardrail_info": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Guardrail Info"
            }
          },
          "type": "object",
          "required": [
            "guardrail_name",
            "guardrail_info"
          ],
          "title": "GuardrailInfoResponse"
        },
        "HTTPValidationError": {
          "properties": {
            "detail": {
              "items": {
                "$ref": "#/components/schemas/ValidationError"
              },
              "type": "array",
              "title": "Detail"
            }
          },
          "type": "object",
          "title": "HTTPValidationError"
        },
        "Hyperparameters": {
          "properties": {
            "batch_size": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Batch Size"
            },
            "learning_rate_multiplier": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Learning Rate Multiplier"
            },
            "n_epochs": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "N Epochs"
            }
          },
          "type": "object",
          "title": "Hyperparameters"
        },
        "IPAddress": {
          "properties": {
            "ip": {
              "type": "string",
              "title": "Ip"
            }
          },
          "type": "object",
          "required": [
            "ip"
          ],
          "title": "IPAddress"
        },
        "KeyHealthResponse": {
          "properties": {
            "key": {
              "type": "string",
              "enum": [
                "healthy",
                "unhealthy"
              ],
              "title": "Key"
            },
            "logging_callbacks": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LoggingCallbackStatus"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "title": "KeyHealthResponse"
        },
        "KeyListResponseObject": {
          "properties": {
            "keys": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "$ref": "#/components/schemas/UserAPIKeyAuth"
                  }
                ]
              },
              "type": "array",
              "title": "Keys"
            },
            "total_count": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Total Count"
            },
            "current_page": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Current Page"
            },
            "total_pages": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Total Pages"
            }
          },
          "type": "object",
          "title": "KeyListResponseObject"
        },
        "KeyRequest": {
          "properties": {
            "keys": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Keys"
            },
            "key_aliases": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key Aliases"
            }
          },
          "type": "object",
          "title": "KeyRequest"
        },
        "ListGuardrailsResponse": {
          "properties": {
            "guardrails": {
              "items": {
                "$ref": "#/components/schemas/GuardrailInfoResponse"
              },
              "type": "array",
              "title": "Guardrails"
            }
          },
          "type": "object",
          "required": [
            "guardrails"
          ],
          "title": "ListGuardrailsResponse"
        },
        "LiteLLMFineTuningJobCreate": {
          "properties": {
            "model": {
              "type": "string",
              "title": "Model"
            },
            "training_file": {
              "type": "string",
              "title": "Training File"
            },
            "hyperparameters": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Hyperparameters"
                },
                {
                  "type": "null"
                }
              ]
            },
            "suffix": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Suffix"
            },
            "validation_file": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Validation File"
            },
            "integrations": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Integrations"
            },
            "seed": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Seed"
            },
            "custom_llm_provider": {
              "type": "string",
              "enum": [
                "openai",
                "azure",
                "vertex_ai"
              ],
              "title": "Custom Llm Provider"
            }
          },
          "additionalProperties": true,
          "type": "object",
          "required": [
            "model",
            "training_file",
            "custom_llm_provider"
          ],
          "title": "LiteLLMFineTuningJobCreate"
        },
        "LiteLLM_BudgetTable": {
          "properties": {
            "soft_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Soft Budget"
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "max_parallel_requests": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Parallel Requests"
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "model_max_budget": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Max Budget"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            }
          },
          "type": "object",
          "title": "LiteLLM_BudgetTable",
          "description": "Represents user-controllable params for a LiteLLM_BudgetTable record"
        },
        "LiteLLM_EndUserTable": {
          "properties": {
            "user_id": {
              "type": "string",
              "title": "User Id"
            },
            "blocked": {
              "type": "boolean",
              "title": "Blocked"
            },
            "alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Alias"
            },
            "spend": {
              "type": "number",
              "title": "Spend",
              "default": 0
            },
            "allowed_model_region": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "eu",
                    "us"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allowed Model Region"
            },
            "default_model": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Default Model"
            },
            "litellm_budget_table": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LiteLLM_BudgetTable"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "user_id",
            "blocked"
          ],
          "title": "LiteLLM_EndUserTable"
        },
        "LiteLLM_ModelTable": {
          "properties": {
            "model_aliases": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Aliases"
            },
            "created_by": {
              "type": "string",
              "title": "Created By"
            },
            "updated_by": {
              "type": "string",
              "title": "Updated By"
            }
          },
          "type": "object",
          "required": [
            "created_by",
            "updated_by"
          ],
          "title": "LiteLLM_ModelTable"
        },
        "LiteLLM_OrganizationMembershipTable": {
          "properties": {
            "user_id": {
              "type": "string",
              "title": "User Id"
            },
            "organization_id": {
              "type": "string",
              "title": "Organization Id"
            },
            "user_role": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Role"
            },
            "spend": {
              "type": "number",
              "title": "Spend",
              "default": 0
            },
            "budget_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Id"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "title": "Updated At"
            },
            "user": {
              "anyOf": [
                {
  
                },
                {
                  "type": "null"
                }
              ],
              "title": "User"
            },
            "litellm_budget_table": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LiteLLM_BudgetTable"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "user_id",
            "organization_id",
            "created_at",
            "updated_at"
          ],
          "title": "LiteLLM_OrganizationMembershipTable",
          "description": "This is the table that track what organizations a user belongs to and users spend within the organization"
        },
        "LiteLLM_Params": {
          "properties": {
            "custom_llm_provider": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Llm Provider"
            },
            "tpm": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm"
            },
            "rpm": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm"
            },
            "api_key": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Api Key"
            },
            "api_base": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Api Base"
            },
            "api_version": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Api Version"
            },
            "timeout": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Timeout"
            },
            "stream_timeout": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Stream Timeout"
            },
            "max_retries": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Retries"
            },
            "organization": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization"
            },
            "configurable_clientside_auth_params": {
              "anyOf": [
                {
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/ConfigurableClientsideParamsCustomAuth"
                      }
                    ]
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Configurable Clientside Auth Params"
            },
            "litellm_trace_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Litellm Trace Id"
            },
            "region_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Region Name"
            },
            "vertex_project": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vertex Project"
            },
            "vertex_location": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vertex Location"
            },
            "vertex_credentials": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vertex Credentials"
            },
            "aws_access_key_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aws Access Key Id"
            },
            "aws_secret_access_key": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aws Secret Access Key"
            },
            "aws_region_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aws Region Name"
            },
            "watsonx_region_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Watsonx Region Name"
            },
            "input_cost_per_token": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Input Cost Per Token"
            },
            "output_cost_per_token": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Output Cost Per Token"
            },
            "input_cost_per_second": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Input Cost Per Second"
            },
            "output_cost_per_second": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Output Cost Per Second"
            },
            "max_file_size_mb": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max File Size Mb"
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "use_in_pass_through": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Use In Pass Through",
              "default": false
            },
            "model": {
              "type": "string",
              "title": "Model"
            }
          },
          "additionalProperties": true,
          "type": "object",
          "required": [
            "model"
          ],
          "title": "LiteLLM_Params",
          "description": "LiteLLM Params with 'model' requirement - used for completions"
        },
        "LiteLLM_SpendLogs": {
          "properties": {
            "request_id": {
              "type": "string",
              "title": "Request Id"
            },
            "api_key": {
              "type": "string",
              "title": "Api Key"
            },
            "model": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model",
              "default": ""
            },
            "api_base": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Api Base",
              "default": ""
            },
            "call_type": {
              "type": "string",
              "title": "Call Type"
            },
            "spend": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Spend",
              "default": 0
            },
            "total_tokens": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Total Tokens",
              "default": 0
            },
            "prompt_tokens": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prompt Tokens",
              "default": 0
            },
            "completion_tokens": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Completion Tokens",
              "default": 0
            },
            "startTime": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Starttime"
            },
            "endTime": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Endtime"
            },
            "user": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User",
              "default": ""
            },
            "metadata": {
              "anyOf": [
                {
  
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata",
              "default": {
  
              }
            },
            "cache_hit": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cache Hit",
              "default": "False"
            },
            "cache_key": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cache Key"
            },
            "request_tags": {
              "anyOf": [
                {
  
                },
                {
                  "type": "null"
                }
              ],
              "title": "Request Tags"
            },
            "requester_ip_address": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Requester Ip Address"
            },
            "messages": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Messages"
            },
            "response": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Response"
            }
          },
          "type": "object",
          "required": [
            "request_id",
            "api_key",
            "call_type",
            "startTime",
            "endTime",
            "messages",
            "response"
          ],
          "title": "LiteLLM_SpendLogs"
        },
        "LiteLLM_TeamMembership": {
          "properties": {
            "user_id": {
              "type": "string",
              "title": "User Id"
            },
            "team_id": {
              "type": "string",
              "title": "Team Id"
            },
            "budget_id": {
              "type": "string",
              "title": "Budget Id"
            },
            "litellm_budget_table": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LiteLLM_BudgetTable"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "required": [
            "user_id",
            "team_id",
            "budget_id",
            "litellm_budget_table"
          ],
          "title": "LiteLLM_TeamMembership"
        },
        "LiteLLM_TeamTable": {
          "properties": {
            "team_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Alias"
            },
            "team_id": {
              "type": "string",
              "title": "Team Id"
            },
            "organization_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Id"
            },
            "admins": {
              "items": {
  
              },
              "type": "array",
              "title": "Admins",
              "default": []
            },
            "members": {
              "items": {
  
              },
              "type": "array",
              "title": "Members",
              "default": []
            },
            "members_with_roles": {
              "items": {
                "$ref": "#/components/schemas/Member"
              },
              "type": "array",
              "title": "Members With Roles",
              "default": []
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "models": {
              "items": {
  
              },
              "type": "array",
              "title": "Models",
              "default": []
            },
            "blocked": {
              "type": "boolean",
              "title": "Blocked",
              "default": false
            },
            "spend": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Spend"
            },
            "max_parallel_requests": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Parallel Requests"
            },
            "budget_reset_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Reset At"
            },
            "model_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Id"
            },
            "litellm_model_table": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LiteLLM_ModelTable"
                },
                {
                  "type": "null"
                }
              ]
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At"
            }
          },
          "type": "object",
          "required": [
            "team_id"
          ],
          "title": "LiteLLM_TeamTable"
        },
        "LiteLLM_UserTable": {
          "properties": {
            "user_id": {
              "type": "string",
              "title": "User Id"
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "spend": {
              "type": "number",
              "title": "Spend",
              "default": 0
            },
            "model_max_budget": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Max Budget",
              "default": {
  
              }
            },
            "model_spend": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Spend",
              "default": {
  
              }
            },
            "user_email": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Email"
            },
            "models": {
              "items": {
  
              },
              "type": "array",
              "title": "Models",
              "default": []
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "user_role": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Role"
            },
            "organization_memberships": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/LiteLLM_OrganizationMembershipTable"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Memberships"
            },
            "teams": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Teams",
              "default": []
            },
            "sso_user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sso User Id"
            }
          },
          "type": "object",
          "required": [
            "user_id",
            "max_budget",
            "user_email"
          ],
          "title": "LiteLLM_UserTable"
        },
        "LiteLLM_VerificationToken": {
          "properties": {
            "token": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token"
            },
            "key_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key Name"
            },
            "key_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key Alias"
            },
            "spend": {
              "type": "number",
              "title": "Spend",
              "default": 0
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "expires": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Expires"
            },
            "models": {
              "items": {
  
              },
              "type": "array",
              "title": "Models",
              "default": []
            },
            "aliases": {
              "type": "object",
              "title": "Aliases",
              "default": {
  
              }
            },
            "config": {
              "type": "object",
              "title": "Config",
              "default": {
  
              }
            },
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            },
            "team_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Id"
            },
            "max_parallel_requests": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Parallel Requests"
            },
            "metadata": {
              "type": "object",
              "title": "Metadata",
              "default": {
  
              }
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "budget_reset_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Reset At"
            },
            "allowed_cache_controls": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allowed Cache Controls",
              "default": []
            },
            "permissions": {
              "type": "object",
              "title": "Permissions",
              "default": {
  
              }
            },
            "model_spend": {
              "type": "object",
              "title": "Model Spend",
              "default": {
  
              }
            },
            "model_max_budget": {
              "type": "object",
              "title": "Model Max Budget",
              "default": {
  
              }
            },
            "soft_budget_cooldown": {
              "type": "boolean",
              "title": "Soft Budget Cooldown",
              "default": false
            },
            "blocked": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Blocked"
            },
            "litellm_budget_table": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Litellm Budget Table"
            },
            "org_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Org Id"
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At"
            },
            "updated_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated At"
            }
          },
          "type": "object",
          "title": "LiteLLM_VerificationToken"
        },
        "LitellmUserRoles": {
          "type": "string",
          "enum": [
            "proxy_admin",
            "proxy_admin_viewer",
            "org_admin",
            "internal_user",
            "internal_user_viewer",
            "team",
            "customer"
          ],
          "title": "LitellmUserRoles",
          "description": "Admin Roles:\nPROXY_ADMIN: admin over the platform\nPROXY_ADMIN_VIEW_ONLY: can login, view all own keys, view all spend\nORG_ADMIN: admin over a specific organization, can create teams, users only within their organization\n\nInternal User Roles:\nINTERNAL_USER: can login, view/create/delete their own keys, view their spend\nINTERNAL_USER_VIEW_ONLY: can login, view their own keys, view their own spend\n\n\nTeam Roles:\nTEAM: used for JWT auth\n\n\nCustomer Roles:\nCUSTOMER: External users -\u003E these are customers"
        },
        "LoggingCallbackStatus": {
          "properties": {
            "callbacks": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Callbacks"
            },
            "status": {
              "type": "string",
              "enum": [
                "healthy",
                "unhealthy"
              ],
              "title": "Status"
            },
            "details": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Details"
            }
          },
          "type": "object",
          "title": "LoggingCallbackStatus"
        },
        "Member": {
          "properties": {
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            },
            "user_email": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Email"
            },
            "role": {
              "type": "string",
              "enum": [
                "admin",
                "user"
              ],
              "title": "Role"
            }
          },
          "type": "object",
          "required": [
            "role"
          ],
          "title": "Member"
        },
        "ModelInfo": {
          "properties": {
            "id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            },
            "db_model": {
              "type": "boolean",
              "title": "Db Model",
              "default": false
            },
            "updated_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated At"
            },
            "updated_by": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated By"
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At"
            },
            "created_by": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created By"
            },
            "base_model": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Base Model"
            },
            "tier": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "free",
                    "paid"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tier"
            },
            "team_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Id"
            }
          },
          "additionalProperties": true,
          "type": "object",
          "required": [
            "id"
          ],
          "title": "ModelInfo"
        },
        "ModelInfoDelete": {
          "properties": {
            "id": {
              "type": "string",
              "title": "Id"
            }
          },
          "type": "object",
          "required": [
            "id"
          ],
          "title": "ModelInfoDelete"
        },
        "NewCustomerRequest": {
          "properties": {
            "budget_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Id"
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget",
              "description": "Requests will fail if this budget (in USD) is exceeded."
            },
            "soft_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Soft Budget",
              "description": "Requests will NOT fail if this is exceeded. Will fire alerting though."
            },
            "max_parallel_requests": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Parallel Requests",
              "description": "Max concurrent requests allowed for this budget id."
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit",
              "description": "Max tokens per minute, allowed for this budget id."
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit",
              "description": "Max requests per minute, allowed for this budget id."
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration",
              "description": "Max duration budget should be set for (e.g. '1hr', '1d', '28d')"
            },
            "model_max_budget": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/BudgetConfig"
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Max Budget",
              "description": "Max budget for each model (e.g. {'gpt-4o': {'max_budget': '0.0000001', 'budget_duration': '1d', 'tpm_limit': 1000, 'rpm_limit': 1000}})"
            },
            "user_id": {
              "type": "string",
              "title": "User Id"
            },
            "alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Alias"
            },
            "blocked": {
              "type": "boolean",
              "title": "Blocked",
              "default": false
            },
            "allowed_model_region": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "eu",
                    "us"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allowed Model Region"
            },
            "default_model": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Default Model"
            }
          },
          "type": "object",
          "required": [
            "user_id"
          ],
          "title": "NewCustomerRequest",
          "description": "Create a new customer, allocate a budget to them"
        },
        "NewOrganizationRequest": {
          "properties": {
            "soft_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Soft Budget"
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "max_parallel_requests": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Parallel Requests"
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "model_max_budget": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Max Budget"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "organization_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Id"
            },
            "organization_alias": {
              "type": "string",
              "title": "Organization Alias"
            },
            "models": {
              "items": {
  
              },
              "type": "array",
              "title": "Models",
              "default": []
            },
            "budget_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Id"
            }
          },
          "type": "object",
          "required": [
            "organization_alias"
          ],
          "title": "NewOrganizationRequest"
        },
        "NewOrganizationResponse": {
          "properties": {
            "organization_id": {
              "type": "string",
              "title": "Organization Id"
            },
            "organization_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Alias"
            },
            "budget_id": {
              "type": "string",
              "title": "Budget Id"
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            },
            "models": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Models"
            },
            "created_by": {
              "type": "string",
              "title": "Created By"
            },
            "updated_by": {
              "type": "string",
              "title": "Updated By"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "title": "Created At"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "title": "Updated At"
            }
          },
          "type": "object",
          "required": [
            "organization_id",
            "budget_id",
            "models",
            "created_by",
            "updated_by",
            "created_at",
            "updated_at"
          ],
          "title": "NewOrganizationResponse"
        },
        "NewTeamRequest": {
          "properties": {
            "team_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Alias"
            },
            "team_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Id"
            },
            "organization_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Id"
            },
            "admins": {
              "items": {
  
              },
              "type": "array",
              "title": "Admins",
              "default": []
            },
            "members": {
              "items": {
  
              },
              "type": "array",
              "title": "Members",
              "default": []
            },
            "members_with_roles": {
              "items": {
                "$ref": "#/components/schemas/Member"
              },
              "type": "array",
              "title": "Members With Roles",
              "default": []
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "models": {
              "items": {
  
              },
              "type": "array",
              "title": "Models",
              "default": []
            },
            "blocked": {
              "type": "boolean",
              "title": "Blocked",
              "default": false
            },
            "model_aliases": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Aliases"
            },
            "tags": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            },
            "guardrails": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Guardrails"
            }
          },
          "type": "object",
          "title": "NewTeamRequest"
        },
        "NewUserRequest": {
          "properties": {
            "key_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key Alias"
            },
            "duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Duration"
            },
            "models": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Models",
              "default": []
            },
            "spend": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Spend",
              "default": 0
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            },
            "team_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Id"
            },
            "max_parallel_requests": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Parallel Requests"
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata",
              "default": {
  
              }
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "allowed_cache_controls": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allowed Cache Controls",
              "default": []
            },
            "config": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Config",
              "default": {
  
              }
            },
            "permissions": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Permissions",
              "default": {
  
              }
            },
            "model_max_budget": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Max Budget",
              "default": {
  
              }
            },
            "model_rpm_limit": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Rpm Limit"
            },
            "model_tpm_limit": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Tpm Limit"
            },
            "guardrails": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Guardrails"
            },
            "blocked": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Blocked"
            },
            "aliases": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aliases",
              "default": {
  
              }
            },
            "user_email": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Email"
            },
            "user_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Alias"
            },
            "user_role": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "proxy_admin",
                    "proxy_admin_viewer",
                    "internal_user",
                    "internal_user_viewer"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Role"
            },
            "teams": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Teams"
            },
            "auto_create_key": {
              "type": "boolean",
              "title": "Auto Create Key",
              "default": true
            },
            "send_invite_email": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Send Invite Email"
            }
          },
          "type": "object",
          "title": "NewUserRequest"
        },
        "NewUserResponse": {
          "properties": {
            "key_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key Alias"
            },
            "duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Duration"
            },
            "models": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Models",
              "default": []
            },
            "spend": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Spend",
              "default": 0
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            },
            "team_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Id"
            },
            "max_parallel_requests": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Parallel Requests"
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata",
              "default": {
  
              }
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "allowed_cache_controls": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allowed Cache Controls",
              "default": []
            },
            "config": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Config",
              "default": {
  
              }
            },
            "permissions": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Permissions",
              "default": {
  
              }
            },
            "model_max_budget": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Max Budget"
            },
            "model_rpm_limit": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Rpm Limit"
            },
            "model_tpm_limit": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Tpm Limit"
            },
            "guardrails": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Guardrails"
            },
            "blocked": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Blocked"
            },
            "aliases": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aliases",
              "default": {
  
              }
            },
            "key": {
              "type": "string",
              "title": "Key"
            },
            "budget_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Id"
            },
            "tags": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            },
            "enforced_params": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Enforced Params"
            },
            "key_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key Name"
            },
            "expires": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Expires"
            },
            "token_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token Id"
            },
            "litellm_budget_table": {
              "anyOf": [
                {
  
                },
                {
                  "type": "null"
                }
              ],
              "title": "Litellm Budget Table"
            },
            "token": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token"
            },
            "user_email": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Email"
            },
            "user_role": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "proxy_admin",
                    "proxy_admin_viewer",
                    "internal_user",
                    "internal_user_viewer"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Role"
            },
            "teams": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Teams"
            },
            "user_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Alias"
            }
          },
          "type": "object",
          "required": [
            "key",
            "expires"
          ],
          "title": "NewUserResponse"
        },
        "OrgMember": {
          "properties": {
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            },
            "user_email": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Email"
            },
            "role": {
              "type": "string",
              "enum": [
                "org_admin",
                "internal_user",
                "internal_user_viewer"
              ],
              "title": "Role"
            }
          },
          "type": "object",
          "required": [
            "role"
          ],
          "title": "OrgMember"
        },
        "OrganizationAddMemberResponse": {
          "properties": {
            "organization_id": {
              "type": "string",
              "title": "Organization Id"
            },
            "updated_users": {
              "items": {
                "$ref": "#/components/schemas/LiteLLM_UserTable"
              },
              "type": "array",
              "title": "Updated Users"
            },
            "updated_organization_memberships": {
              "items": {
                "$ref": "#/components/schemas/LiteLLM_OrganizationMembershipTable"
              },
              "type": "array",
              "title": "Updated Organization Memberships"
            }
          },
          "type": "object",
          "required": [
            "organization_id",
            "updated_users",
            "updated_organization_memberships"
          ],
          "title": "OrganizationAddMemberResponse"
        },
        "OrganizationMemberAddRequest": {
          "properties": {
            "member": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/OrgMember"
                  },
                  "type": "array"
                },
                {
                  "$ref": "#/components/schemas/OrgMember"
                }
              ],
              "title": "Member"
            },
            "organization_id": {
              "type": "string",
              "title": "Organization Id"
            },
            "max_budget_in_organization": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget In Organization"
            }
          },
          "type": "object",
          "required": [
            "member",
            "organization_id"
          ],
          "title": "OrganizationMemberAddRequest"
        },
        "OrganizationRequest": {
          "properties": {
            "organizations": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "title": "Organizations"
            }
          },
          "type": "object",
          "required": [
            "organizations"
          ],
          "title": "OrganizationRequest"
        },
        "PassThroughEndpointResponse": {
          "properties": {
            "endpoints": {
              "items": {
                "$ref": "#/components/schemas/PassThroughGenericEndpoint"
              },
              "type": "array",
              "title": "Endpoints"
            }
          },
          "type": "object",
          "required": [
            "endpoints"
          ],
          "title": "PassThroughEndpointResponse"
        },
        "PassThroughGenericEndpoint": {
          "properties": {
            "path": {
              "type": "string",
              "title": "Path",
              "description": "The route to be added to the LiteLLM Proxy Server."
            },
            "target": {
              "type": "string",
              "title": "Target",
              "description": "The URL to which requests for this path should be forwarded."
            },
            "headers": {
              "type": "object",
              "title": "Headers",
              "description": "Key-value pairs of headers to be forwarded with the request. You can set any key value pair here and it will be forwarded to your target endpoint"
            }
          },
          "type": "object",
          "required": [
            "path",
            "target",
            "headers"
          ],
          "title": "PassThroughGenericEndpoint"
        },
        "ProviderBudgetResponse": {
          "properties": {
            "providers": {
              "additionalProperties": {
                "$ref": "#/components/schemas/ProviderBudgetResponseObject"
              },
              "type": "object",
              "title": "Providers",
              "default": {
  
              }
            }
          },
          "type": "object",
          "title": "ProviderBudgetResponse",
          "description": "Complete provider budget configuration and status.\nMaps provider names to their budget configs."
        },
        "ProviderBudgetResponseObject": {
          "properties": {
            "budget_limit": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Limit"
            },
            "time_period": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Time Period"
            },
            "spend": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Spend",
              "default": 0
            },
            "budget_reset_at": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Reset At"
            }
          },
          "type": "object",
          "required": [
            "budget_limit",
            "time_period"
          ],
          "title": "ProviderBudgetResponseObject",
          "description": "Configuration for a single provider's budget settings"
        },
        "RegenerateKeyRequest": {
          "properties": {
            "key_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key Alias"
            },
            "duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Duration"
            },
            "models": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Models",
              "default": []
            },
            "spend": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Spend"
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            },
            "team_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Id"
            },
            "max_parallel_requests": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Parallel Requests"
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "allowed_cache_controls": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allowed Cache Controls",
              "default": []
            },
            "config": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Config",
              "default": {
  
              }
            },
            "permissions": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Permissions",
              "default": {
  
              }
            },
            "model_max_budget": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Max Budget",
              "default": {
  
              }
            },
            "model_rpm_limit": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Rpm Limit"
            },
            "model_tpm_limit": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Tpm Limit"
            },
            "guardrails": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Guardrails"
            },
            "blocked": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Blocked"
            },
            "aliases": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aliases",
              "default": {
  
              }
            },
            "key": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key"
            },
            "budget_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Id"
            },
            "tags": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            },
            "enforced_params": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Enforced Params"
            },
            "soft_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Soft Budget"
            },
            "send_invite_email": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Send Invite Email"
            }
          },
          "type": "object",
          "title": "RegenerateKeyRequest"
        },
        "SpendCalculateRequest": {
          "properties": {
            "model": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model"
            },
            "messages": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Messages"
            },
            "completion_response": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Completion Response"
            }
          },
          "type": "object",
          "title": "SpendCalculateRequest"
        },
        "TeamAddMemberResponse": {
          "properties": {
            "team_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Alias"
            },
            "team_id": {
              "type": "string",
              "title": "Team Id"
            },
            "organization_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Id"
            },
            "admins": {
              "items": {
  
              },
              "type": "array",
              "title": "Admins",
              "default": []
            },
            "members": {
              "items": {
  
              },
              "type": "array",
              "title": "Members",
              "default": []
            },
            "members_with_roles": {
              "items": {
                "$ref": "#/components/schemas/Member"
              },
              "type": "array",
              "title": "Members With Roles",
              "default": []
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "models": {
              "items": {
  
              },
              "type": "array",
              "title": "Models",
              "default": []
            },
            "blocked": {
              "type": "boolean",
              "title": "Blocked",
              "default": false
            },
            "spend": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Spend"
            },
            "max_parallel_requests": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Parallel Requests"
            },
            "budget_reset_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Reset At"
            },
            "model_id": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Id"
            },
            "litellm_model_table": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LiteLLM_ModelTable"
                },
                {
                  "type": "null"
                }
              ]
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At"
            },
            "updated_users": {
              "items": {
                "$ref": "#/components/schemas/LiteLLM_UserTable"
              },
              "type": "array",
              "title": "Updated Users"
            },
            "updated_team_memberships": {
              "items": {
                "$ref": "#/components/schemas/LiteLLM_TeamMembership"
              },
              "type": "array",
              "title": "Updated Team Memberships"
            }
          },
          "type": "object",
          "required": [
            "team_id",
            "updated_users",
            "updated_team_memberships"
          ],
          "title": "TeamAddMemberResponse"
        },
        "TeamMemberAddRequest": {
          "properties": {
            "member": {
              "anyOf": [
                {
                  "items": {
                    "$ref": "#/components/schemas/Member"
                  },
                  "type": "array"
                },
                {
                  "$ref": "#/components/schemas/Member"
                }
              ],
              "title": "Member"
            },
            "team_id": {
              "type": "string",
              "title": "Team Id"
            },
            "max_budget_in_team": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget In Team"
            }
          },
          "type": "object",
          "required": [
            "member",
            "team_id"
          ],
          "title": "TeamMemberAddRequest"
        },
        "TeamMemberDeleteRequest": {
          "properties": {
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            },
            "user_email": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Email"
            },
            "team_id": {
              "type": "string",
              "title": "Team Id"
            }
          },
          "type": "object",
          "required": [
            "team_id"
          ],
          "title": "TeamMemberDeleteRequest"
        },
        "TeamMemberUpdateRequest": {
          "properties": {
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            },
            "user_email": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Email"
            },
            "team_id": {
              "type": "string",
              "title": "Team Id"
            },
            "max_budget_in_team": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget In Team"
            },
            "role": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "admin",
                    "user"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Role"
            }
          },
          "type": "object",
          "required": [
            "team_id"
          ],
          "title": "TeamMemberUpdateRequest"
        },
        "TeamMemberUpdateResponse": {
          "properties": {
            "user_id": {
              "type": "string",
              "title": "User Id"
            },
            "user_email": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Email"
            },
            "team_id": {
              "type": "string",
              "title": "Team Id"
            },
            "max_budget_in_team": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget In Team"
            }
          },
          "type": "object",
          "required": [
            "user_id",
            "team_id"
          ],
          "title": "TeamMemberUpdateResponse"
        },
        "TokenCountRequest": {
          "properties": {
            "model": {
              "type": "string",
              "title": "Model"
            },
            "prompt": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prompt"
            },
            "messages": {
              "anyOf": [
                {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Messages"
            }
          },
          "type": "object",
          "required": [
            "model"
          ],
          "title": "TokenCountRequest"
        },
        "TokenCountResponse": {
          "properties": {
            "total_tokens": {
              "type": "integer",
              "title": "Total Tokens"
            },
            "request_model": {
              "type": "string",
              "title": "Request Model"
            },
            "model_used": {
              "type": "string",
              "title": "Model Used"
            },
            "tokenizer_type": {
              "type": "string",
              "title": "Tokenizer Type"
            }
          },
          "type": "object",
          "required": [
            "total_tokens",
            "request_model",
            "model_used",
            "tokenizer_type"
          ],
          "title": "TokenCountResponse"
        },
        "UpdateCustomerRequest": {
          "properties": {
            "user_id": {
              "type": "string",
              "title": "User Id"
            },
            "alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Alias"
            },
            "blocked": {
              "type": "boolean",
              "title": "Blocked",
              "default": false
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "budget_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Id"
            },
            "allowed_model_region": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "eu",
                    "us"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allowed Model Region"
            },
            "default_model": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Default Model"
            }
          },
          "type": "object",
          "required": [
            "user_id"
          ],
          "title": "UpdateCustomerRequest",
          "description": "Update a Customer, use this to update customer budgets etc"
        },
        "UpdateKeyRequest": {
          "properties": {
            "key_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key Alias"
            },
            "duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Duration"
            },
            "models": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Models",
              "default": []
            },
            "spend": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Spend"
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            },
            "team_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Id"
            },
            "max_parallel_requests": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Parallel Requests"
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "allowed_cache_controls": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allowed Cache Controls",
              "default": []
            },
            "config": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Config",
              "default": {
  
              }
            },
            "permissions": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Permissions",
              "default": {
  
              }
            },
            "model_max_budget": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Max Budget",
              "default": {
  
              }
            },
            "model_rpm_limit": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Rpm Limit"
            },
            "model_tpm_limit": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Tpm Limit"
            },
            "guardrails": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Guardrails"
            },
            "blocked": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Blocked"
            },
            "aliases": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aliases",
              "default": {
  
              }
            },
            "key": {
              "type": "string",
              "title": "Key"
            },
            "budget_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Id"
            },
            "tags": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            },
            "enforced_params": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Enforced Params"
            },
            "temp_budget_increase": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Temp Budget Increase"
            },
            "temp_budget_expiry": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Temp Budget Expiry"
            }
          },
          "type": "object",
          "required": [
            "key"
          ],
          "title": "UpdateKeyRequest"
        },
        "UpdateTeamRequest": {
          "properties": {
            "team_id": {
              "type": "string",
              "title": "Team Id"
            },
            "team_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Alias"
            },
            "organization_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Id"
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "models": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Models"
            },
            "blocked": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Blocked"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "tags": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            },
            "model_aliases": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Aliases"
            },
            "guardrails": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Guardrails"
            }
          },
          "type": "object",
          "required": [
            "team_id"
          ],
          "title": "UpdateTeamRequest",
          "description": "UpdateTeamRequest, used by /team/update when you need to update a team\n\nteam_id: str\nteam_alias: Optional[str] = None\norganization_id: Optional[str] = None\nmetadata: Optional[dict] = None\ntpm_limit: Optional[int] = None\nrpm_limit: Optional[int] = None\nmax_budget: Optional[float] = None\nmodels: Optional[list] = None\nblocked: Optional[bool] = None\nbudget_duration: Optional[str] = None\nguardrails: Optional[List[str]] = None"
        },
        "UpdateUserRequest": {
          "properties": {
            "key_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key Alias"
            },
            "duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Duration"
            },
            "models": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Models",
              "default": []
            },
            "spend": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Spend"
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            },
            "team_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Id"
            },
            "max_parallel_requests": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Parallel Requests"
            },
            "metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "allowed_cache_controls": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allowed Cache Controls",
              "default": []
            },
            "config": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Config",
              "default": {
  
              }
            },
            "permissions": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Permissions",
              "default": {
  
              }
            },
            "model_max_budget": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Max Budget",
              "default": {
  
              }
            },
            "model_rpm_limit": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Rpm Limit"
            },
            "model_tpm_limit": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Tpm Limit"
            },
            "guardrails": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Guardrails"
            },
            "blocked": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Blocked"
            },
            "aliases": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aliases",
              "default": {
  
              }
            },
            "password": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Password"
            },
            "user_email": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Email"
            },
            "user_role": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "proxy_admin",
                    "proxy_admin_viewer",
                    "internal_user",
                    "internal_user_viewer"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Role"
            }
          },
          "type": "object",
          "title": "UpdateUserRequest"
        },
        "UserAPIKeyAuth": {
          "properties": {
            "token": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Token"
            },
            "key_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key Name"
            },
            "key_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key Alias"
            },
            "spend": {
              "type": "number",
              "title": "Spend",
              "default": 0
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "expires": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Expires"
            },
            "models": {
              "items": {
  
              },
              "type": "array",
              "title": "Models",
              "default": []
            },
            "aliases": {
              "type": "object",
              "title": "Aliases",
              "default": {
  
              }
            },
            "config": {
              "type": "object",
              "title": "Config",
              "default": {
  
              }
            },
            "user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            },
            "team_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Id"
            },
            "max_parallel_requests": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Parallel Requests"
            },
            "metadata": {
              "type": "object",
              "title": "Metadata",
              "default": {
  
              }
            },
            "tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit"
            },
            "rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "budget_reset_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Reset At"
            },
            "allowed_cache_controls": {
              "anyOf": [
                {
                  "items": {
  
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allowed Cache Controls",
              "default": []
            },
            "permissions": {
              "type": "object",
              "title": "Permissions",
              "default": {
  
              }
            },
            "model_spend": {
              "type": "object",
              "title": "Model Spend",
              "default": {
  
              }
            },
            "model_max_budget": {
              "type": "object",
              "title": "Model Max Budget",
              "default": {
  
              }
            },
            "soft_budget_cooldown": {
              "type": "boolean",
              "title": "Soft Budget Cooldown",
              "default": false
            },
            "blocked": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Blocked"
            },
            "litellm_budget_table": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Litellm Budget Table"
            },
            "org_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Org Id"
            },
            "created_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Created At"
            },
            "updated_at": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Updated At"
            },
            "team_spend": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Spend"
            },
            "team_alias": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Alias"
            },
            "team_tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Tpm Limit"
            },
            "team_rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Rpm Limit"
            },
            "team_max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Max Budget"
            },
            "team_models": {
              "items": {
  
              },
              "type": "array",
              "title": "Team Models",
              "default": []
            },
            "team_blocked": {
              "type": "boolean",
              "title": "Team Blocked",
              "default": false
            },
            "soft_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Soft Budget"
            },
            "team_model_aliases": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Model Aliases"
            },
            "team_member_spend": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Member Spend"
            },
            "team_member": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Member"
                },
                {
                  "type": "null"
                }
              ]
            },
            "team_metadata": {
              "anyOf": [
                {
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Team Metadata"
            },
            "end_user_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End User Id"
            },
            "end_user_tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End User Tpm Limit"
            },
            "end_user_rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End User Rpm Limit"
            },
            "end_user_max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "End User Max Budget"
            },
            "last_refreshed_at": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Last Refreshed At"
            },
            "api_key": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Api Key"
            },
            "user_role": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LitellmUserRoles"
                },
                {
                  "type": "null"
                }
              ]
            },
            "allowed_model_region": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "eu",
                    "us"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "title": "Allowed Model Region"
            },
            "parent_otel_span": {
              "anyOf": [
                {
  
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Otel Span"
            },
            "rpm_limit_per_model": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm Limit Per Model"
            },
            "tpm_limit_per_model": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "integer"
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm Limit Per Model"
            },
            "user_tpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Tpm Limit"
            },
            "user_rpm_limit": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Rpm Limit"
            }
          },
          "type": "object",
          "title": "UserAPIKeyAuth",
          "description": "Return the row in the db"
        },
        "ValidationError": {
          "properties": {
            "loc": {
              "items": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  }
                ]
              },
              "type": "array",
              "title": "Location"
            },
            "msg": {
              "type": "string",
              "title": "Message"
            },
            "type": {
              "type": "string",
              "title": "Error Type"
            }
          },
          "type": "object",
          "required": [
            "loc",
            "msg",
            "type"
          ],
          "title": "ValidationError"
        },
        "updateDeployment": {
          "properties": {
            "model_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model Name"
            },
            "litellm_params": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/updateLiteLLMParams"
                },
                {
                  "type": "null"
                }
              ]
            },
            "model_info": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ModelInfo"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "type": "object",
          "title": "updateDeployment"
        },
        "updateLiteLLMParams": {
          "properties": {
            "custom_llm_provider": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Custom Llm Provider"
            },
            "tpm": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tpm"
            },
            "rpm": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Rpm"
            },
            "api_key": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Api Key"
            },
            "api_base": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Api Base"
            },
            "api_version": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Api Version"
            },
            "timeout": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Timeout"
            },
            "stream_timeout": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Stream Timeout"
            },
            "max_retries": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Retries"
            },
            "organization": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization"
            },
            "configurable_clientside_auth_params": {
              "anyOf": [
                {
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "$ref": "#/components/schemas/ConfigurableClientsideParamsCustomAuth"
                      }
                    ]
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Configurable Clientside Auth Params"
            },
            "litellm_trace_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Litellm Trace Id"
            },
            "region_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Region Name"
            },
            "vertex_project": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vertex Project"
            },
            "vertex_location": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vertex Location"
            },
            "vertex_credentials": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Vertex Credentials"
            },
            "aws_access_key_id": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aws Access Key Id"
            },
            "aws_secret_access_key": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aws Secret Access Key"
            },
            "aws_region_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Aws Region Name"
            },
            "watsonx_region_name": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Watsonx Region Name"
            },
            "input_cost_per_token": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Input Cost Per Token"
            },
            "output_cost_per_token": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Output Cost Per Token"
            },
            "input_cost_per_second": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Input Cost Per Second"
            },
            "output_cost_per_second": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Output Cost Per Second"
            },
            "max_file_size_mb": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max File Size Mb"
            },
            "max_budget": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Budget"
            },
            "budget_duration": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Budget Duration"
            },
            "use_in_pass_through": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Use In Pass Through",
              "default": false
            },
            "model": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Model"
            }
          },
          "additionalProperties": true,
          "type": "object",
          "title": "updateLiteLLMParams"
        }
      },
      "securitySchemes": {
        "APIKeyHeader": {
          "type": "apiKey",
          "description": "If google ai studio client used.",
          "in": "header",
          "name": "x-goog-api-key"
        }
      }
    }
  }